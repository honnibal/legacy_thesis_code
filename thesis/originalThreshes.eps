%!PS-Adobe-2.0
%%Title: /home/mhonn/formfunction/originalThreshes.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Feb 20 17:17:54 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -83 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
1275 750 M
63 0 V
5437 0 R
-63 0 V
stroke
1125 750 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
grestore
1.000 UL
LTb
1275 1548 M
63 0 V
5437 0 R
-63 0 V
stroke
1125 1548 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.2)]
] -83.3 MRshow
grestore
1.000 UL
LTb
1275 2346 M
63 0 V
5437 0 R
-63 0 V
stroke
1125 2346 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.4)]
] -83.3 MRshow
grestore
1.000 UL
LTb
1275 3144 M
63 0 V
5437 0 R
-63 0 V
stroke
1125 3144 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.6)]
] -83.3 MRshow
grestore
1.000 UL
LTb
1275 3942 M
63 0 V
5437 0 R
-63 0 V
stroke
1125 3942 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.8)]
] -83.3 MRshow
grestore
1.000 UL
LTb
1275 4740 M
63 0 V
5437 0 R
-63 0 V
stroke
1125 4740 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
grestore
1.000 UL
LTb
1275 750 M
0 63 V
0 3927 R
0 -63 V
stroke
1275 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
grestore
1.000 UL
LTb
2192 750 M
0 63 V
0 3927 R
0 -63 V
stroke
2192 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 10)]
] -83.3 MCshow
grestore
1.000 UL
LTb
3108 750 M
0 63 V
0 3927 R
0 -63 V
stroke
3108 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 20)]
] -83.3 MCshow
grestore
1.000 UL
LTb
4025 750 M
0 63 V
0 3927 R
0 -63 V
stroke
4025 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 30)]
] -83.3 MCshow
grestore
1.000 UL
LTb
4942 750 M
0 63 V
0 3927 R
0 -63 V
stroke
4942 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 40)]
] -83.3 MCshow
grestore
1.000 UL
LTb
5858 750 M
0 63 V
0 3927 R
0 -63 V
stroke
5858 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 50)]
] -83.3 MCshow
grestore
1.000 UL
LTb
6775 750 M
0 63 V
0 3927 R
0 -63 V
stroke
6775 500 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 ( 60)]
] -83.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1275 750 M
5500 0 V
0 3990 V
-5500 0 V
0 -3990 V
LTb
250 2745 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (Coverage)]
] -83.3 MCshow
grestore
grestore
LTb
4025 125 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 (Threshold)]
] -83.3 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5662 4552 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 (CCGbank)]
] -83.3 MRshow
grestore
LT0
1275 750 Pls
1367 1379 Pls
1458 1663 Pls
1550 1816 Pls
1642 1914 Pls
1733 1996 Pls
1825 2070 Pls
1917 2155 Pls
2008 2227 Pls
2100 2280 Pls
2192 2296 Pls
2283 2317 Pls
2375 2331 Pls
2467 2358 Pls
2558 2388 Pls
2650 2404 Pls
2742 2410 Pls
2833 2421 Pls
2925 2457 Pls
3017 2464 Pls
3108 2478 Pls
3200 2500 Pls
3292 2547 Pls
3383 2566 Pls
3475 2575 Pls
3567 2585 Pls
3658 2596 Pls
3750 2602 Pls
3842 2608 Pls
3933 2608 Pls
4025 2613 Pls
4117 2613 Pls
4208 2613 Pls
4300 2620 Pls
4392 2620 Pls
4483 2620 Pls
4575 2654 Pls
4667 2654 Pls
4758 2654 Pls
4850 2665 Pls
4942 2690 Pls
5033 2721 Pls
5125 2725 Pls
5217 2744 Pls
5308 2744 Pls
5400 2744 Pls
5492 2744 Pls
5583 2749 Pls
5675 2749 Pls
5767 2764 Pls
5858 2774 Pls
5950 2774 Pls
6042 2774 Pls
6133 2774 Pls
6225 2785 Pls
6317 2785 Pls
6408 2785 Pls
6500 2785 Pls
6592 2785 Pls
6683 2785 Pls
6143 4552 Pls
1.000 UL
LT1
LTb
5662 4302 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 (LexChange)]
] -83.3 MRshow
grestore
LT1
5812 4302 M
663 0 V
1275 750 M
92 472 V
91 244 V
92 201 V
92 148 V
91 81 V
92 61 V
92 69 V
91 47 V
92 33 V
92 30 V
91 36 V
92 20 V
92 16 V
91 13 V
92 45 V
92 17 V
91 2 V
92 14 V
92 33 V
91 38 V
92 2 V
92 0 V
91 13 V
92 13 V
92 18 V
91 13 V
92 0 V
92 7 V
91 14 V
92 0 V
92 18 V
91 5 V
92 0 V
92 3 V
91 5 V
92 0 V
92 13 V
91 0 V
92 0 V
92 11 V
91 6 V
92 0 V
92 18 V
91 0 V
92 27 V
92 0 V
91 13 V
92 17 V
92 20 V
91 26 V
92 16 V
92 10 V
91 10 V
92 6 V
92 0 V
91 0 V
92 0 V
92 13 V
91 0 V
1.000 UP
1.000 UL
LT1
LTb
5662 4052 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 (Combinatory)]
] -83.3 MRshow
grestore
LT1
1275 750 Crs
1367 1157 Crs
1458 1390 Crs
1550 1576 Crs
1642 1705 Crs
1733 1783 Crs
1825 1844 Crs
1917 1914 Crs
2008 1964 Crs
2100 1996 Crs
2192 2027 Crs
2283 2062 Crs
2375 2083 Crs
2467 2101 Crs
2558 2113 Crs
2650 2160 Crs
2742 2178 Crs
2833 2180 Crs
2925 2194 Crs
3017 2228 Crs
3108 2268 Crs
3200 2270 Crs
3292 2270 Crs
3383 2283 Crs
3475 2296 Crs
3567 2317 Crs
3658 2329 Crs
3750 2329 Crs
3842 2337 Crs
3933 2352 Crs
4025 2352 Crs
4117 2371 Crs
4208 2376 Crs
4300 2376 Crs
4392 2378 Crs
4483 2383 Crs
4575 2383 Crs
4667 2397 Crs
4758 2397 Crs
4850 2397 Crs
4942 2409 Crs
5033 2416 Crs
5125 2416 Crs
5217 2434 Crs
5308 2434 Crs
5400 2462 Crs
5492 2462 Crs
5583 2476 Crs
5675 2494 Crs
5767 2515 Crs
5858 2542 Crs
5950 2559 Crs
6042 2569 Crs
6133 2580 Crs
6225 2586 Crs
6317 2586 Crs
6408 2586 Crs
6500 2586 Crs
6592 2599 Crs
6683 2599 Crs
6143 4052 Crs
1.000 UP
1.000 UL
LT2
LTb
5662 3802 M
gsave 0 setgray
[ [(Helvetica) 250.0 0.0 true true 0 (Tokens)]
] -83.3 MRshow
grestore
LT2
1275 4740 Star
1367 3686 Star
1458 3179 Star
1550 2820 Star
1642 2571 Star
1733 2405 Star
1825 2279 Star
1917 2159 Star
2008 2058 Star
2100 1992 Star
2192 1928 Star
2283 1853 Star
2375 1812 Star
2467 1742 Star
2558 1694 Star
2650 1635 Star
2742 1604 Star
2833 1588 Star
2925 1561 Star
3017 1515 Star
3108 1456 Star
3200 1446 Star
3292 1446 Star
3383 1423 Star
3475 1400 Star
3567 1363 Star
3658 1351 Star
3750 1351 Star
3842 1337 Star
3933 1309 Star
4025 1309 Star
4117 1278 Star
4208 1263 Star
4300 1263 Star
4392 1229 Star
4483 1212 Star
4575 1212 Star
4667 1158 Star
4758 1158 Star
4850 1158 Star
4942 1138 Star
5033 1118 Star
5125 1118 Star
5217 1097 Star
5308 1097 Star
5400 1053 Star
5492 1053 Star
5583 1030 Star
5675 1007 Star
5767 959 Star
5858 910 Star
5950 885 Star
6042 860 Star
6133 834 Star
6225 808 Star
6317 808 Star
6408 808 Star
6500 808 Star
6592 779 Star
6683 779 Star
6143 3802 Star
1.000 UL
LTb
1275 750 M
5500 0 V
0 3990 V
-5500 0 V
0 -3990 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
